name: Publish Helm Charts to GitHub Pages

on:
  push:
    branches:
      - master
    paths:
      - 'helm/**'
  schedule:
    - cron: '0 3 * * *'  # Daily at 3 AM UTC
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.DEVI_PAT_TOKEN }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Add Bitnami repo
        run: helm repo add bitnami https://charts.bitnami.com/bitnami && helm repo update

      - name: Lint local charts
        run: |
          for chart in $(find helm -maxdepth 1 -mindepth 1 -type d); do
            helm lint "$chart"
          done

      - name: Create working directories
        run: mkdir -p .chart-out .chart-tmp .gh-pages

      - name: Fetch existing gh-pages
        run: |
          git fetch origin gh-pages
          git worktree add .gh-pages origin/gh-pages || echo "No gh-pages branch yet"

      - name: Preserve existing charts
        run: |
          cp .gh-pages/*.tgz .chart-out/ 2>/dev/null || true
          cp .gh-pages/index.yaml .chart-out/index.yaml 2>/dev/null || true

      - name: Determine existing Apache versions
        id: apache-versions
        run: |
          EXISTING=$(yq -r '.entries.apache[].version' .chart-out/index.yaml 2>/dev/null || echo "")
          echo "existing_versions<<EOF" >> $GITHUB_OUTPUT
          echo "$EXISTING" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Package new Apache versions
        run: |
          EXISTING="${{ steps.apache-versions.outputs.existing_versions }}"
          LATEST=$(helm search repo bitnami/apache --versions -o json | jq -r '.[].version' | head -n 10)

          for VERSION in $LATEST; do
            if echo "$EXISTING" | grep -Fqx "$VERSION"; then
              echo "‚è© Skipping already packaged Apache $VERSION"
            else
              echo "üì¶ Packaging Apache $VERSION"
              helm pull bitnami/apache --version "$VERSION" --untar --untardir .chart-tmp
              helm package .chart-tmp/apache --version "$VERSION" --app-version "$VERSION" -d .chart-out
              rm -rf .chart-tmp/apache
            fi
          done

      - name: Package local charts
        run: |
          for chart in $(find helm -maxdepth 1 -mindepth 1 -type d); do
            helm dependency update "$chart" || true
            helm package "$chart" -d .chart-out
          done

      - name: Show packaged charts
        run: ls -lh .chart-out/*.tgz || echo "‚ö†Ô∏è No charts found!"

      - name: Generate merged Helm index
        run: |
          helm repo index .chart-out \
            --url https://portainer.github.io/test-public-repo \
            --merge .chart-out/index.yaml

      - name: Prune old chart versions (keep latest 10 per chart)
        run: |
          set -euo pipefail
          for chart in $(yq -r '.entries | keys[]' .chart-out/index.yaml); do
            versions=$(yq -r ".entries[\"$chart\"][].version" .chart-out/index.yaml | sort -rV)
            keep=$(echo "$versions" | head -n 10)
            delete=$(comm -23 <(echo "$versions") <(echo "$keep") || true)

            for v in $delete; do
              echo "üóë Removing $chart-$v.tgz"
              rm -f .chart-out/$chart-$v.tgz
            done
          done

          # regenerate index cleanly after pruning
          helm repo index .chart-out \
            --url https://portainer.github.io/test-public-repo

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .chart-out
          publish_branch: gh-pages
